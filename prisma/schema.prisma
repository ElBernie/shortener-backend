// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String  @id @default(uuid())
  email           String  @unique
  password        String
  validationToken String? @default(uuid())
  validated       Boolean @default(false)

  createdAt       DateTime           @default(now())
  updatedAt       DateTime           @updatedAt
  Links           Links[]
  Workspaces      WorkspaceMembers[]
  OwnedWorkspaces Workspace[]
}

model Workspace {
  id        String   @id @default(uuid())
  name      String
  owner     User     @relation(fields: [ownerId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  ownerId   String
  type      String   @default("PERSONAL")
  deletable Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  WorkspaceMembers WorkspaceMembers[]
  WorkspaceRoles   WorkspaceRoles[]
  Links            Links[]
  WorkspaceInvites WorkspaceInvites[]
}

model WorkspaceMembers {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user        User           @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId      String
  workspace   Workspace      @relation(fields: [workspaceId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  workspaceId String
  role        WorkspaceRoles @relation(fields: [roleId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  roleId      String

  @@unique([userId, workspaceId])
}

model WorkspaceRoles {
  id        String  @id @default(uuid())
  name      String
  deletable Boolean @default(true)
  default   Boolean @default(false)

  // permissions
  workspaceEdit          Boolean? @default(false)
  workspaceMembersEdit   Boolean? @default(false)
  workspaceMembersInvite Boolean? @default(false)
  workspaceMembersRemove Boolean? @default(false)

  linksView      Boolean? @default(false)
  linksViewOwn   Boolean? @default(false)
  linksCreate    Boolean? @default(false)
  linksEdit      Boolean? @default(false)
  linksEditOwn   Boolean? @default(false)
  linksDelete    Boolean? @default(false)
  linksDeleteOwn Boolean? @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  workspace   Workspace          @relation(fields: [workspaceId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  workspaceId String
  members     WorkspaceMembers[]
}

model WorkspaceInvites {
  id        String   @id @default(uuid())
  email     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  workspace   Workspace @relation(fields: [workspaceId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  workspaceId String

  @@unique([workspaceId, email])
}

model Links {
  id        String   @id @default(uuid())
  alias     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password String?
  hits     Int     @default(0)

  userId String?
  user   User?   @relation(fields: [userId], references: [id], onDelete: SetNull, onUpdate: Cascade)

  workspace   Workspace? @relation(fields: [workspaceId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  workspaceId String?

  URL   URL    @relation(fields: [URLId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  URLId String

  Domain Domain? @relation(fields: [host], references: [host], onDelete: SetNull, onUpdate: Cascade)
  host   String?
}

model URL {
  id        String   @id @default(uuid())
  url       String   @unique
  title     String?
  protocol  String?  @default("https")
  pathname  String?
  search    String?
  hash      String?
  hits      Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Links  Links[]
  Domain Domain? @relation(fields: [host], references: [host], onDelete: SetNull, onUpdate: Cascade)
  host   String?
}

model Domain {
  host          String   @id @unique
  banned        Boolean  @default(false)
  ageRestricted Boolean  @default(false)
  hits          Int      @default(0)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  links Links[]
  URL   URL[]
}
